/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

package interfaces;

import kelas.Buku;
import main.dbConnection;

// library
import java.awt.Image;
import java.awt.image.BufferedImage;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Arik Rizki Akbar
 */

public class BukuPanel extends javax.swing.JPanel {

    /**
     * Creates new form AuthorPanel
     */
    
    // koneksi db
    dbConnection dbCon = new dbConnection();
    
    // tampungan tabelBuku
    Buku tBuku = new Buku();
    
    
    // constructor
    public BukuPanel(boolean empty) {}
    
    public BukuPanel(Buku dataBuku) {
        initComponents();
        
        // panel update status = hide
        updateBukuPanel.setVisible(false);
        
        // set label data dengan data kelas buku
        label_judul.setText(dataBuku.getJudul());
        label_penerbit.setText("Penerbit  : " + dataBuku.getPenerbit());
        label_author.setText("Author    : " + dataBuku.getAuthor());
        
        // deskripsi
        area_deskripsi.setText(dataBuku.getDeskripsi());
        area_deskripsi.setLineWrap(true);
        area_deskripsi.setWrapStyleWord(true);
        
        // get atribut kedalam data kelas
        tBuku.setId_buku(dataBuku.getId_buku());
        tBuku.setJudul(dataBuku.getJudul());
        tBuku.setPenerbit(dataBuku.getPenerbit());
        tBuku.setAuthor(dataBuku.getAuthor());
        tBuku.setDeskripsi(dataBuku.getDeskripsi());
        tBuku.setImage_buku(dataBuku.getImage_buku());
        
        // menampilkan image
        BufferedImage image = null;
        
        try {
            // mendapatkan image sesuai dengan nama format image
            image = ImageIO.read(getClass().getResource("/images/" + dataBuku.getImage_buku()));
            
            Image dImage = image.getScaledInstance(200, 200, Image.SCALE_SMOOTH);
            label_image.setIcon(new ImageIcon(dImage));
            
        } catch (Exception e) {
            System.err.println("error: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label_judul = new javax.swing.JLabel();
        label_author = new javax.swing.JLabel();
        label_image = new javax.swing.JLabel();
        label_penerbit = new javax.swing.JLabel();
        updateBukuPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaDeskripsi = new javax.swing.JTextArea();
        fieldJudul = new javax.swing.JTextField();
        fieldAuthor = new javax.swing.JTextField();
        fieldPenerbit = new javax.swing.JTextField();
        fieldBukuImage = new javax.swing.JTextField();
        btnBukuUpdate = new javax.swing.JButton();
        labelJudul = new javax.swing.JLabel();
        labelAuthor = new javax.swing.JLabel();
        labelPenerbit = new javax.swing.JLabel();
        labelBukuImage = new javax.swing.JLabel();
        labelDeskripsi = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JToggleButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        area_deskripsi = new javax.swing.JTextArea();

        setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        label_judul.setFont(new java.awt.Font("Verdana", 1, 20)); // NOI18N
        label_judul.setText("Judul");

        label_author.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        label_author.setText("Author");

        label_image.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        label_penerbit.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        label_penerbit.setText("Penerbit");

        areaDeskripsi.setColumns(20);
        areaDeskripsi.setRows(5);
        jScrollPane1.setViewportView(areaDeskripsi);

        fieldJudul.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        fieldJudul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldJudulActionPerformed(evt);
            }
        });

        fieldAuthor.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        fieldAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldAuthorActionPerformed(evt);
            }
        });

        fieldPenerbit.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        fieldPenerbit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldPenerbitActionPerformed(evt);
            }
        });

        fieldBukuImage.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        fieldBukuImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldBukuImageActionPerformed(evt);
            }
        });

        btnBukuUpdate.setText("Update");
        btnBukuUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBukuUpdateActionPerformed(evt);
            }
        });

        labelJudul.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        labelJudul.setText("Judul");

        labelAuthor.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        labelAuthor.setText("Author");

        labelPenerbit.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        labelPenerbit.setText("Penerbit");

        labelBukuImage.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        labelBukuImage.setText("Format Image");

        labelDeskripsi.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        labelDeskripsi.setText("Deskripsi");

        javax.swing.GroupLayout updateBukuPanelLayout = new javax.swing.GroupLayout(updateBukuPanel);
        updateBukuPanel.setLayout(updateBukuPanelLayout);
        updateBukuPanelLayout.setHorizontalGroup(
            updateBukuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateBukuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(updateBukuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelJudul)
                    .addComponent(labelAuthor)
                    .addComponent(labelPenerbit)
                    .addComponent(labelBukuImage)
                    .addComponent(labelDeskripsi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(updateBukuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(fieldPenerbit, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                    .addComponent(fieldAuthor)
                    .addComponent(fieldJudul)
                    .addComponent(fieldBukuImage)
                    .addComponent(jScrollPane1))
                .addContainerGap(50, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updateBukuPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBukuUpdate)
                .addGap(165, 165, 165))
        );
        updateBukuPanelLayout.setVerticalGroup(
            updateBukuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateBukuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(updateBukuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldJudul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelJudul))
                .addGap(12, 12, 12)
                .addGroup(updateBukuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelAuthor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(updateBukuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldPenerbit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPenerbit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(updateBukuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldBukuImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelBukuImage))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(updateBukuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelDeskripsi)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBukuUpdate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        area_deskripsi.setEditable(false);
        area_deskripsi.setColumns(20);
        area_deskripsi.setRows(5);
        jScrollPane2.setViewportView(area_deskripsi);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(375, Short.MAX_VALUE)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete)
                .addGap(46, 46, 46))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(label_image, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label_author)
                    .addComponent(label_penerbit)
                    .addComponent(label_judul)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(updateBukuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label_judul)
                        .addGap(18, 18, 18)
                        .addComponent(label_author)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label_penerbit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(label_image, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(updateBukuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void fieldJudulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldJudulActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldJudulActionPerformed

    private void fieldAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldAuthorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldAuthorActionPerformed

    private void fieldPenerbitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldPenerbitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldPenerbitActionPerformed

    private void btnBukuUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBukuUpdateActionPerformed
        // TODO add your handling code here:
        
        // konek database
        dbCon.connect();
        
        // get value dari field
        String judul = fieldJudul.getText();
        String penerbit = fieldPenerbit.getText();
        String author = fieldAuthor.getText();
        String deskripsi = areaDeskripsi.getText();
        String format_image = fieldBukuImage.getText();
        
        // update database
        String sql = "update `buku` set `judul` = \'" + judul + "\',`penerbit` = \'" + penerbit + "\',`author` = \'" + author + "\',`deskripsi` = \'" + deskripsi + "\',`image_buku` = \'"+ format_image + "\' where `id_buku` =" + tBuku.getId_buku() + ";";
        dbCon.query(sql);
        
        // mengeset kembali value update
        tBuku.setJudul(judul);
        tBuku.setPenerbit(penerbit);
        tBuku.setAuthor(author);
        tBuku.setDeskripsi(deskripsi);
        tBuku.setImage_buku(format_image);
        
        // merubah label data
        label_judul.setText(judul);
        label_penerbit.setText("Penerbit  : " + penerbit);
        label_author.setText("Author    : " + author);
        area_deskripsi.setText(deskripsi);
        area_deskripsi.setLineWrap(true);
        area_deskripsi.setWrapStyleWord(true);
        
        // menampilkan image
        BufferedImage image = null;
        
        try {
            // mendapatkan source image
            image = ImageIO.read(getClass().getResource("/images/" + format_image));
            Image dImage = image.getScaledInstance(200, 200, Image.SCALE_SMOOTH);
            
            label_image.setIcon(new ImageIcon(dImage));
            
        } catch (Exception e) {
            System.err.println("error: " + e.getMessage());
        }
        
        // hide
        updateBukuPanel.setVisible(false);
    }//GEN-LAST:event_btnBukuUpdateActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        
        // jika true / selected
        if(btnUpdate.isSelected()){
            // tampilkan panel
            updateBukuPanel.setVisible(true);
            
            // menampilkan field
            fieldJudul.setText(tBuku.getJudul());
            fieldPenerbit.setText(tBuku.getPenerbit());
            fieldAuthor.setText(tBuku.getAuthor());
            areaDeskripsi.setText(tBuku.getDeskripsi());
            areaDeskripsi.setLineWrap(true);
            areaDeskripsi.setWrapStyleWord(true);
            fieldBukuImage.setText(tBuku.getImage_buku());
        }
        else{
            // hide
            updateBukuPanel.setVisible(false);

        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        
        // opsi button delete
        int optionDelete = 
                JOptionPane.showConfirmDialog(null, "Are you sure?", "Delete", JOptionPane.YES_NO_OPTION);
        
        // jika true
        if(optionDelete == 0){
            // konek ke db
            dbCon.connect();
            
            // query Delete
            String sql = "delete from `buku` where `id_buku`=" + tBuku.getId_buku();
            dbCon.query(sql);
            
            // hide
            setVisible(false);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void fieldBukuImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldBukuImageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldBukuImageActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaDeskripsi;
    private javax.swing.JTextArea area_deskripsi;
    private javax.swing.JButton btnBukuUpdate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JToggleButton btnUpdate;
    private javax.swing.JTextField fieldAuthor;
    private javax.swing.JTextField fieldBukuImage;
    private javax.swing.JTextField fieldJudul;
    private javax.swing.JTextField fieldPenerbit;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelAuthor;
    private javax.swing.JLabel labelBukuImage;
    private javax.swing.JLabel labelDeskripsi;
    private javax.swing.JLabel labelJudul;
    private javax.swing.JLabel labelPenerbit;
    private javax.swing.JLabel label_author;
    private javax.swing.JLabel label_image;
    private javax.swing.JLabel label_judul;
    private javax.swing.JLabel label_penerbit;
    private javax.swing.JPanel updateBukuPanel;
    // End of variables declaration//GEN-END:variables
}
